{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","baseURL","Loading","App","useState","loading","setLoading","users","setUsers","newUserName","setNewUserName","newUserCompany","setNewUserCompany","fetchAndSetUsers","a","get","response","data","console","log","useEffect","Users","props","map","user","key","className","value","company","onClick","post","replace","id","style","display","alignItems","textAlign","flexDirection","height","width","src","logo","alt","marginBottom","marginTop","type","onChange","e","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAAe,MAA0B,iC,+BCKzCA,IAAMC,SAASC,QAAsG,GAErH,IAAMC,EAAU,kBACZ,8BACI,oDAoFOC,EA9EH,WACV,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAA4CN,mBAAS,IAArD,mBAAOO,EAAP,KAAuBC,EAAvB,KAEMC,EAAgB,uCAAG,4BAAAC,EAAA,sEAEnBR,GAAW,GAFQ,SAGIP,IAAMgB,IAAI,cAHd,OAGbC,EAHa,OAInBR,EAASQ,EAASC,KAAKV,OACvBD,GAAW,GALQ,gDAOnBY,QAAQC,IAAR,MACAb,GAAW,GARQ,yDAAH,qDAYtBc,qBAAU,WACRP,MACC,IAGL,IAAMQ,EAAQ,SAACC,GAEX,OADkBA,EAAVf,MACKgB,KAAI,SAACC,GACd,OACI,gCACI,iCAASA,EAAKC,MADlB,IAEI,uBAAMC,UAAWF,EAAKG,MAAMC,QAA5B,iCAAmDJ,EAAKG,MAAMC,SAA9D,OACA,wBAAQC,QAAO,sBAAE,sBAAAf,EAAA,6DACjBR,GAAW,GADM,SAEXP,IAAM+B,KAAK,oBAAoB,CACjC,KAAON,EAAKC,IAAIM,QAAQ,QAAQ,MAHnB,uBAKXlB,IALW,2CAAjB,uBAHMW,EAAKQ,QAezB,OACE,sBAAKN,UAAU,MAAMO,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUC,UAAW,SAAUC,cAAe,SAAUC,OAAQ,SAA3H,UACI,qBAAKA,OAAQ,IAAKC,MAAO,IAAKC,IAAKC,EAAMf,UAAU,WAAWgB,IAAI,OAAOT,MAAO,CAAEU,cAAe,GAAIC,WAAY,MACjH,8EAGA,8BACCvC,EACK,cAAC,EAAD,IACA,cAACgB,EAAD,CAAOd,MAAOA,MAGpB,gCACI,uBACA,0CAFJ,SAGU,uBAAOsC,KAAK,OAAOC,SAAU,SAACC,GAChCrC,EAAeqC,EAAEC,OAAOrB,UAJhC,IAKU,uBALV,YAMa,uBAAOkB,KAAK,OAAOC,SAAU,SAACC,GACnCnC,EAAkBmC,EAAEC,OAAOrB,UAPnC,IAQS,uBACL,wBAAQE,QAAO,sBAAE,sBAAAf,EAAA,sEACPf,IAAM+B,KAAK,aAAa,CAC1B,KAAOrB,EACP,KAAO,CACH,QAAUE,KAJL,uBAOPE,IAPO,2CAAjB,6BClEGoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6a542083.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useState, useEffect } from 'react'\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios'\n\naxios.defaults.baseURL = process.env.NODE_ENV === 'development' ? 'https://curly-rice-1ib2z.cloud.serverless.com/' : ''\n\nconst Loading = () => (\n    <div>\n        <p>Loading Users...</p>\n    </div>\n)\n\n\n\nconst App = () => {\n  const [loading, setLoading] = useState(false)\n  const [users, setUsers] = useState([])\n  const [newUserName, setNewUserName] = useState('');\n  const [newUserCompany, setNewUserCompany] = useState('');\n \n  const fetchAndSetUsers = async () => {\n    try {\n        setLoading(true)\n        const response = await axios.get('/api/users')\n        setUsers(response.data.users)\n        setLoading(false)\n    } catch (e) {\n        console.log(e)\n        setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    fetchAndSetUsers()\n  }, [])\n\n\nconst Users = (props) => {\n    const { users } = props\n    return users.map((user) => {\n        return (\n            <div key={user.id}>\n                <strong>{user.key}</strong>, \n                <span className={user.value.company}>Company: {` ${user.value.company}`} </span>\n                <button onClick={async ()=>{\n                setLoading(true)\n                await axios.post('/api/users/delete',{\n                    \"name\":user.key.replace('user:',''),\n                })\n                await fetchAndSetUsers();\n            }}> Delete</button>\n            </div>\n        )\n    })\n}\n\n  return (\n    <div className='App' style={{ display: 'flex', alignItems: 'center', textAlign: 'center', flexDirection: 'column', height: '100vh' }}>\n        <img height={150} width={150} src={logo} className=\"App-logo\" alt=\"logo\" style={{ marginBottom: -50, marginTop: -50 }} />\n        <h1>\n            Serverless Cloud, API, DataStore + react.js:\n        </h1>\n        <div>\n        {loading\n            ? <Loading/>\n            : <Users users={users} />\n        }\n        </div>\n        <div>\n            <hr />\n            <h2>Add User</h2>\n            name: <input type=\"text\" onChange={(e)=>{\n                setNewUserName(e.target.value)\n            }} /> <br/>\n            Company: <input type=\"text\" onChange={(e)=>{\n                setNewUserCompany(e.target.value)\n            }}/> <br/>\n            <button onClick={async ()=>{\n                await axios.post('/api/users',{\n                    \"name\":newUserName,\n                    \"data\":{\n                        \"company\":newUserCompany\n                    }\n                })\n                await fetchAndSetUsers();\n            }}>Add User</button>\n        </div>\n        \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}